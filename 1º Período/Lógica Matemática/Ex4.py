import ttg
print("Lista 1")
print("Ex 1- A")
print(ttg.Truths(['p'],['~p'], ints=False))
print("Ex 1- B")
print(ttg.Truths(['p', 'q'],['p and q'], ints=False))
print("Ex 1- C")
print(ttg.Truths(['p', 'q'],['p or q'], ints=False))
print("Ex 1- D")
print(ttg.Truths(['p', 'q'],['q = p'], ints=False))
print("Ex 1- E")
print(ttg.Truths(['p', 'q'],['P=>(~q)'], ints=False))
print("Ex 1- F")
print(ttg.Truths(['p', 'q'],['p or (~q)'], ints=False))
print("Ex 1- G")
print(ttg.Truths(['p', 'q'],['(~p) and (~q)'], ints=False))
print("Ex 1- H")
print(ttg.Truths(['p', 'q'],['p = (~q)'], ints=False))
print("Ex 1- I")
print(ttg.Truths(['p', 'q'],['(p and (~q)) => p'], ints=False))
print("Ex 2- A")
print(ttg.Truths(['p', 'q'],['~p and q'], ints=False))
print("Ex 2- B")
print(ttg.Truths(['p', 'q'],['p and ~q'], ints=False))
print("Ex 2- C")
print(ttg.Truths(['p', 'q'],['~p and ~q'], ints=False))
print("Ex 2- D")
print(ttg.Truths(['p', 'q'],['(~p or p) and q'], ints=False))
print("Ex 3- A")
print(ttg.Truths(['p', 'q'],['q => p'], ints=False))
print("Ex 3- B")
print(ttg.Truths(['p'],['~(~p)'], ints=False))
print("Ex 3- C")
print(ttg.Truths(['p', 'q'],['~((~p) and (~q))'], ints=False))
print("Ex 4- A")
print(ttg.Truths(['p', 'q', 'r'],['(p or q) and ~r'], ints=False))
print("Ex 4- B")
print(ttg.Truths(['p', 'q', 'r'],['(p and q) or ~(p and r)'], ints=False))
print("Ex 4- C")
print(ttg.Truths(['p', 'q', 'r'],['~(p and ~r)'], ints=False))
print("Ex 4- D")
print(ttg.Truths(['p', 'q', 'r'],['~((q or r) and ~p)'], ints=False))
print("Ex 5- A")
print(ttg.Truths(['p', 'q', 'r'],['~((p and r) or (~q))'], ints=False))
print("Ex 5- B")
print(ttg.Truths(['p', 'q', 'r'],['(p or q) and r'], ints=False))
print("Ex 5- C")
print(ttg.Truths(['p', 'q', 'r'],['~r => (p and ~q)'], ints=False))
print("Ex 5- D")
print(ttg.Truths(['p', 'q', 'r'],['~((~p and ~q) and (r and p))'], ints=False))
print("Lista 2")
